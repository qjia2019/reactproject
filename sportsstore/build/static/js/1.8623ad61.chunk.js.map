{"version":3,"sources":["admin/clientQueries.js","admin/OrdersRow.js","admin/OrdersTable.js","admin/clientMutations.js","admin/OrdersConnector.js","admin/ProductsRow.js","admin/ProductsTable.js","admin/ProductsConnector.js","admin/ProductCreator.js","admin/ProductEditor.js","auth/AuthWrapper.js","auth/AuthPrompt.js","admin/Admin.js"],"names":["ordersSummaryQuery","gql","_templateObject","productsList","_templateObject2","product","_templateObject3","OrdersRow","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","calcTotal","products","reduce","total","p","quantity","price","toFixed","getShipping","order","shipped","react_default","a","createElement","className","render","props","id","name","email","onClick","toggleShipped","inherits","Component","OrdersTable","totalSize","PaginationControls","assign","keys","orders","map","OrdersRow_OrdersRow","key","shipOrder","clientMutations_templateObject","storeProduct","clientMutations_templateObject2","updateProduct","clientMutations_templateObject3","deleteProduct","_templateObject4","vars","onlyShipped","page","pageSize","sort","OrdersConnector","compose","graphql","options","variables","_ref","_ref$data","data","loading","refetch","currentPage","pageCount","Math","ceil","navigateToPage","Number","setPageSize","size","sortKey","setSortProperty","_ref2","mutate","ProductsRow","category","Link","to","ProductsTable","prod","ProductsRow_ProductsRow","ConnectedProducts","update","cache","queryDetails","query","readQuery","filter","writeQuery","objectSpread","_ref3","ProductCreator","navigate","history","push","react_apollo_browser_umd","mutation","saveMutation","client","ValidatedForm","formModel","defaultAttrs","submitCallback","mode","resetStore","cancelCallback","submitText","cancelText","type","required","label","attrs","disabled","toConsumableArray","item","defaultValue","toLowerCase","ProductEditor","match","params","ProductCreator_ProductCreator","authWrapper","WrappedComponent","_class2","AuthContext","Consumer","context","AuthPrompt","withRouter","authenticate","credentials","catch","err","setState","errorMessage","message","then","state","_class","ApolloClient","uri","GraphQlUrl","request","gqloperation","setContext","headers","Authorization","webToken","createClass","value","ToggleLink","isAuthenticated","signout","Switch","Route","component","path","Redirect"],"mappings":"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","file":"static/js/1.8623ad61.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const ordersSummaryQuery = gql`\n    query($onlyShipped: Boolean, $page:Int, $pageSize:Int, $sort:String) {\n        orders(onlyUnshipped: $onlyShipped) {\n            totalSize, \n            orders(page: $page, pageSize: $pageSize, sort: $sort) {\n                id, name, email, shipped \n                products {\n                    quantity, product { price }\n                } \n            }\n        }\n    }`\n\nexport const productsList = gql`\n    query($page: Int, $pageSize: Int, $sort: String) {\n        products {\n            totalSize, \n            products(page: $page, pageSize: $pageSize, sort: $sort) {\n                id, name, category, price\n            }\n        }\n    }`\n\nexport const product = gql`\n    query($id: ID!) {\n        product(id: $id) {\n            id, name, description, category, price\n        }\n    }`\n","import React, { Component } from \"react\";\n\nexport class OrdersRow extends Component {\n\n    calcTotal = (products) => products.reduce((total, p) => \n        total += p.quantity * p.product.price, 0).toFixed(2)\n\n    getShipping = (order) => order.shipped                 \n        ? <i className=\"fa fa-shipping-fast text-success\" /> \n        : <i className=\"fa fa-exclamation-circle text-danger\" /> \n    \n    render = () => \n        <tr>\n            <td>{ this.props.order.id }</td>\n            <td>{this.props.order.name}</td>\n            <td>{ this.props.order.email }</td>\n            <td className=\"text-right\">\n                ${ this.calcTotal(this.props.order.products) }\n            </td>\n            <td className=\"text-center\">\n                <button className=\"btn btn-sm btn-block bg-muted\" \n                        onClick={ this.props.toggleShipped }>\n                    { this.getShipping(this.props.order )}                \n                    <span>\n                        { this.props.order.shipped \n                            ? \" Shipped\" : \" Pending\"}\n                    </span>\n                </button>\n            </td>\n        </tr>\n}\n","import React, { Component } from \"react\";\nimport { OrdersRow } from \"./OrdersRow\";\nimport { PaginationControls } from \"../PaginationControls\";\n\nexport class OrdersTable extends Component {\n\n    render = () => \n        <div>\n            <h4 className=\"bg-info text-white text-center p-2\">\n                { this.props.totalSize } Orders\n            </h4>\n\n            <PaginationControls keys={[\"ID\", \"Name\"]}\n                { ...this.props } />\n\n            <table className=\"table table-sm table-striped\">\n                <thead>\n                    <tr><th>ID</th>\n                        <th>Name</th><th>Email</th>\n                        <th className=\"text-right\">Total</th>\n                        <th className=\"text-center\">Shipped</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { this.props.orders.map(order => \n                        <OrdersRow key={ order.id } \n                            order={ order} toggleShipped={ () => \n                                this.props.toggleShipped(order.id, !order.shipped) }  \n                        /> \n                    )}\n                </tbody>\n            </table>\n        </div>    \n}\n","import gql from \"graphql-tag\";\n\nexport const shipOrder = gql`\n    mutation($id: ID!, $shipped: Boolean!) {\n        shipOrder(id: $id, shipped: $shipped) {\n            id, shipped\n        }\n    }`\n\nexport const storeProduct = gql`\n    mutation($product: productStore) {\n        storeProduct(product: $product) {\n            id, name, category, description, price\n        }\n    }`\n\nexport const updateProduct = gql`\n    mutation($product: productUpdate) {\n        updateProduct(product: $product) {\n            id, name, category, description, price\n        }\n    }`\n\nexport const deleteProduct = gql`\n    mutation($id: ID!) {\n        deleteProduct(id: $id) {\n            id\n        }\n    }`\n","import { graphql, compose } from \"react-apollo\";\nimport { ordersSummaryQuery } from \"./clientQueries\";\nimport { OrdersTable } from \"./OrdersTable\";\nimport { shipOrder } from \"./clientMutations\";\n\nconst vars = {\n    onlyShipped: false, page: 1, pageSize: 10, sort: \"id\"\n}\n\nexport const OrdersConnector = compose(\n    graphql(ordersSummaryQuery,\n        {\n            options: (props) => ({ variables: vars }),\n            props: ({data: { loading, orders, refetch }}) => ({\n                totalSize: loading ? 0 : orders.totalSize,\n                orders: loading ? []: orders.orders,\n                currentPage: vars.page,\n                pageCount: loading ? 0 : Math.ceil(orders.totalSize / vars.pageSize),\n                navigateToPage: (page) => { vars.page = Number(page); refetch(vars)},\n                pageSize: vars.pageSize,            \n                setPageSize: (size) =>\n                    { vars.pageSize = Number(size); refetch(vars)},\n                sortKey: vars.sort,\n                setSortProperty: (key) => { vars.sort = key; refetch(vars)},\n            })\n        }\n    ),\n    graphql(shipOrder, {\n        props: ({ mutate }) => ({\n            toggleShipped: (id, shipped) => mutate({ variables: { id, shipped }})\n        })\n    })\n)(OrdersTable);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class ProductsRow extends Component {\n    \n    render = () => \n        <tr>\n            <td>{ this.props.product.id }</td>\n            <td>{this.props.product.name}</td>\n            <td>{ this.props.product.category }</td>\n            <td className=\"text-right\">\n                ${ this.props.product.price.toFixed(2) }\n            </td>\n            <td className=\"text-center\">\n                <button className=\"btn btn-sm btn-danger mx-1\" \n                    onClick={ () => \n                        this.props.deleteProduct(this.props.product.id) }>\n                            Delete\n                </button>\n                <Link to={`/admin/products/${this.props.product.id}`}\n                    className=\"btn btn-sm btn-warning\">\n                        Edit\n                </Link>\n            </td>\n        </tr>\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PaginationControls } from \"../PaginationControls\";\nimport { ProductsRow } from \"./ProductsRow\";\n\nexport class ProductsTable extends Component {\n\n    render = () =>     \n         <div>\n            <h4 className=\"bg-info text-white text-center p-2\">\n                { this.props.totalSize } Products\n            </h4>\n\n        <PaginationControls keys={[\"ID\", \"Name\", \"Category\"]}\n            { ...this.props } />\n\n        <table className=\"table table-sm table-striped\">\n            <thead>\n                <tr><th>ID</th>\n                    <th>Name</th><th>Category</th>\n                    <th className=\"text-right\">Price</th>\n                    <th className=\"text-center\"></th>\n                </tr>\n            </thead>\n            <tbody>\n                { this.props.products.map(prod => \n                    <ProductsRow key={ prod.id} product={ prod }\n                        deleteProduct={ this.props.deleteProduct } />\n                )}\n            </tbody>\n        </table>\n        <div className=\"text-center\">\n            <Link to=\"/admin/products/create\" className=\"btn btn-primary\">\n                Create Product\n            </Link>\n        </div>\n    </div>                   \n}\n","import { graphql, compose } from \"react-apollo\";\nimport { ProductsTable } from \"./ProductsTable\";\nimport { productsList } from \"./clientQueries\";\nimport { deleteProduct } from \"./clientMutations\";\n\nconst vars = {\n    page: 1, pageSize: 10, sort: \"id\"\n}\n\nexport const ConnectedProducts = compose(\n    graphql(productsList,\n        {\n            options: (props) => ({ variables: vars }),\n            props: ({data: { loading, products, refetch }}) => ({\n                totalSize: loading ? 0 : products.totalSize,\n                products: loading ? []: products.products,\n                currentPage: vars.page,\n                pageCount: loading ? 0 \n                    : Math.ceil(products.totalSize / vars.pageSize),\n                navigateToPage: (page) => { vars.page = Number(page); refetch(vars)},\n                pageSize: vars.pageSize,            \n                setPageSize: (size) => \n                    { vars.pageSize = Number(size); refetch(vars)},\n                sortKey: vars.sort,\n                setSortProperty: (key) => { vars.sort = key; refetch(vars)},\n            })\n        }\n    ),\n    graphql(deleteProduct, \n        {\n            options: {\n                update: (cache, { data: { deleteProduct: { id }}}) => {\n                    const queryDetails = { query: productsList, variables: vars };\n                    const data = cache.readQuery(queryDetails)\n                    data.products.products = \n                        data.products.products.filter(p => p.id !== id);\n                    data.products.totalSize = data.products.totalSize - 1;\n                    cache.writeQuery({...queryDetails, data });\n                }\n        },\n        props: ({ mutate }) => ({\n            deleteProduct: (id) => mutate({ variables: { id }})\n        })\n    })\n)(ProductsTable);\n","import React, { Component } from \"react\";\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\nimport { Mutation } from \"react-apollo\";\nimport { storeProduct, updateProduct } from \"./clientMutations\";\n\nexport class ProductCreator extends Component {\n\n    constructor(props) {\n        super(props);\n        this.defaultAttrs = { type: \"text\", required: true };\n        this.formModel = [\n            { label: \"Name\" }, { label: \"Description\" }, \n            { label: \"Category\" }, \n            { label: \"Price\", attrs: { type: \"number\"}}\n        ];\n        this.mutation = storeProduct;\n        if (this.props.mode === \"edit\" ) {\n            this.mutation = updateProduct;\n            this.formModel = [ { label: \"Id\", attrs: { disabled: true }},  \n                     ...this.formModel]\n                .map(item => ({ ...item, attrs: { ...item.attrs, \n                    defaultValue: this.props.product[item.label.toLowerCase()]} }));\n        }\n    }\n\n    navigate = () => this.props.history.push(\"/admin/products\");\n    \n    render = () => {\n        return <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col bg-dark text-white\">\n                    <div className=\"navbar-brand\">SPORTS STORE</div>\n                </div>\n            </div>        \n            <div className=\"row\">\n                <div className=\"col m-2\">\n                    <Mutation mutation={ this.mutation }>\n                        { (saveMutation, {client }) => {\n                            return <ValidatedForm formModel={ this.formModel } \n                                defaultAttrs={ this.defaultAttrs } \n                                submitCallback={ data => { \n                                    saveMutation({variables: { product: \n                                        { ...data, price: Number(data.price) }}});\n                                    if (this.props.mode !== \"edit\" ) {\n                                        client.resetStore();\n                                    }\n                                    this.navigate();\n                                }} \n                                cancelCallback={ this.navigate } \n                                submitText=\"Save\" cancelText=\"Cancel\" />\n                        }}\n                    </Mutation>        \n                </div>    \n            </div>        \n        </div>        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { ProductCreator } from \"./ProductCreator\";\nimport { product } from \"./clientQueries\";\n\nexport class ProductEditor extends Component {\n\n    render = () => \n        <Query query={ product } variables={ {id: this.props.match.params.id} } >\n            { ({ loading, data }) => {\n                if (!loading) {\n                    return <ProductCreator {...this.props } product={data.product} \n                        mode=\"edit\" />\n                }\n                return null;\n            }}\n        </Query>\n}\n","import React, { Component } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\n\nexport const authWrapper = (WrappedComponent) => \n    class extends Component {\n        render = () => \n            <AuthContext.Consumer>\n                { context =>\n                    <WrappedComponent { ...this.props } { ...context } />\n                }\n            </AuthContext.Consumer>\n    }\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { authWrapper } from \"./AuthWrapper\";\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\n\nexport const AuthPrompt = withRouter(authWrapper(class extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorMessage: null\n        }\n        this.defaultAttrs = { required: true };\n        this.formModel = [\n            { label: \"Username\", attrs: { defaultValue: \"admin\"}}, \n            { label: \"Password\", attrs: { type: \"password\"} }, \n        ];        \n    }\n\n    authenticate = (credentials) => {\n        this.props.authenticate(credentials)\n            .catch(err => this.setState({ errorMessage: err.message}))\n            .then(this.props.history.push(\"/admin\"));\n    }\n\n    render = () => \n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col bg-dark text-white\">\n                    <div className=\"navbar-brand\">SPORTS STORE</div>\n                </div>\n            </div>        \n            <div className=\"row\">\n                <div className=\"col m-2\">\n                    { this.state.errorMessage != null && \n                        <h4 className=\"bg-danger text-center text-white m-1 p-2\">\n                            { this.state.errorMessage }\n                        </h4>\n                    }\n                    <ValidatedForm formModel={ this.formModel }\n                        defaultAttrs={ this.defaultAttrs }                        \n                        submitCallback={ this.authenticate }\n                        submitText=\"Login\"\n                        cancelCallback={ () => this.props.history.push(\"/\")}\n                        cancelText=\"Cancel\"\n                    />\n                </div>\n            </div>\n        </div>\n}))\n","import React, { Component } from \"react\";\nimport  ApolloClient from \"apollo-boost\";\nimport { ApolloProvider} from \"react-apollo\";\nimport { GraphQlUrl } from \"../data/Urls\";\nimport { OrdersConnector } from \"./OrdersConnector\"\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToggleLink } from \"../ToggleLink\";\nimport { ConnectedProducts } from \"./ProductsConnector\";\nimport { ProductEditor } from \"./ProductEditor\";\nimport { ProductCreator } from \"./ProductCreator\";\nimport { AuthPrompt } from \"../auth/AuthPrompt\";\nimport { authWrapper } from \"../auth/AuthWrapper\";\n\n// const graphQlClient = new ApolloClient({\n//     uri: GraphQlUrl\n// });\n\nexport default authWrapper(class extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.client = new ApolloClient({\n            uri: GraphQlUrl,\n            request: gqloperation => gqloperation.setContext({\n                headers: {\n                    Authorization: `Bearer<${this.props.webToken}>`\n                },                \n            })\n        })\n    }\n\n    render() {\n        return <ApolloProvider client={ this.client }>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                <div className=\"col bg-info text-white\">\n                    <div className=\"navbar-brand\">SPORTS STORE</div>\n                </div>\n            </div>        \n            <div className=\"row\">\n                <div className=\"col-3 p-2\">\n                    <ToggleLink to=\"/admin/orders\">Orders</ToggleLink>\n                    <ToggleLink to=\"/admin/products\">Products</ToggleLink>\n                    { this.props.isAuthenticated &&\n                        <button onClick={ this.props.signout }\n                            className=\n                                \"btn btn-block btn-secondary m-2 fixed-bottom col-3\">\n                            Log Out\n                        </button>\n                    }                    \n                </div>\n                <div className=\"col-9 p-2\">\n                    <Switch>\n                        { \n                            !this.props.isAuthenticated && \n                                <Route component={ AuthPrompt } />\n                        }                        \n                        <Route path=\"/admin/orders\" component={ OrdersConnector } />\n                        <Route path=\"/admin/products/create\" \n                            component={ ProductCreator} />                        \n                        <Route path=\"/admin/products/:id\" \n                            component={ ProductEditor} />\n                        <Route path=\"/admin/products\" \n                            component={ ConnectedProducts } />\n                        <Redirect to=\"/admin/orders\" />\n                    </Switch>\n                </div>\n            </div>\n        </div>            \n        </ApolloProvider>\n    }\n})\n"],"sourceRoot":""}