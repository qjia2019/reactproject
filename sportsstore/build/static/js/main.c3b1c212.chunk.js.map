{"version":3,"sources":["data/Urls.js","ToggleLink.js","forms/ValidationError.js","forms/ValidationMessages.js","forms/ValidatedForm.js","PaginationButtons.js","PaginationControls.js","auth/AuthContext.js","data/Types.js","shop/ProductPageConnector.js","data/DataStore.js","data/CommonReducer.js","data/ShopReducer.js","data/CartReducer.js","data/AsyncMiddleware.js","data/ActionCreators.js","data/RestDataSource.js","shop/CategoryNavigation.js","shop/ProductList.js","shop/CartSummary.js","shop/Shop.js","data/CartActionCreators.js","shop/CartDetailsRows.js","shop/CartDetails.js","data/DataGetter.js","shop/Checkout.js","shop/Thanks.js","shop/ShopConnector.js","auth/AuthProviderImpl.js","App.js","serviceWorker.js","index.js"],"names":["RestUrls","_RestUrls","Object","C_Users_Qianlan_Jia_Desktop_coding_play_react_sportsstore_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","DataTypes","PRODUCTS","CATEGORIES","ORDERS","GraphQlUrl","authUrl","ToggleLink","_Component","C_Users_Qianlan_Jia_Desktop_coding_play_react_sportsstore_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Qianlan_Jia_Desktop_coding_play_react_sportsstore_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Qianlan_Jia_Desktop_coding_play_react_sportsstore_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_Qianlan_Jia_Desktop_coding_play_react_sportsstore_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Qianlan_Jia_Desktop_coding_play_react_sportsstore_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","path","props","to","exact","children","routeProps","baseClasses","className","activeClass","inActiveClass","combinedClasses","concat","match","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","Component","ValidationError","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","errors","map","err","react_default","GetMessages","elem","messages","validity","valueMissing","push","typeMismatch","type","ValidatedForm","call","handleSubmit","setState","state","newState","objectSpread","validationErrors","values","formElements","forEach","checkValidity","name","keys","length","data","assign","toConsumableArray","entries","e","defineProperty","submitCallback","registerRef","element","renderElement","modelItem","label","toLowerCase","ValidationError_ValidationError","ref","defaultAttrs","attrs","_this2","Fragment","formModel","m","onClick","cancelCallback","cancelText","submitText","PaginationButtons","_getPrototypeOf2","_len","args","Array","_key","getPageNumbers","pageCount","slice","currentPage","reverse","v","current","navigate","disabled","num","PaginationControls","handlePageSizeChange","ev","setPageSize","target","handleSortPropertyChange","setSortProperty","pageSizes","sizes","sortKeys","PaginationButtons_PaginationButtons","navigateToPage","onChange","pageSize","s","sortKey","k","__webpack_require__","d","__webpack_exports__","AuthContext","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext","isAuthenticated","webToken","authenticate","username","password","signout","ActionTypes","DATA_LOAD","DATA_STORE","DATA_SET_SORT_PROPERTY","DATA_SET_PAGESIZE","CART_ADD","CART_UPDATE","CART_REMOVE","CART_CLEAR","PageComponent","SportsStoreDataStore","createStore","reducers","storeData","action","i","newStore","CommonReducer","_objectSpread2","payload","dataType","total","params","order","cart","cartItems","cartPrice","p","product","q","quantity","existing","find","item","id","price","diff","selection","filter","applyMiddleware","next","then","result","dataSource","RestDataSource","err_handler","GetData","SendRequest","StoreData","method","url","Axios","request","error_handler","loadData","response","Number","headers","newSize","newProp","placeOrder","CategoryNavigation","baseUrl","categories","cat","Link","ProductList","products","toFixed","description","addToCart","CartSummary","getSummary","getLinkClasses","mapStateToProps","dataStore","mapDispatchToProps","mergeProps","actionCreators","router","page","Math","ceil","products_total","history","category","ProductPages","withRouter","connect","Shop","_args","handleAddToCart","_this$props","CartSummary_CartSummary","CategoryNavigation_CategoryNavigation","ProductList_ProductList","updateCartQuantity","removeFromCart","clearCart","CartDetailsRows","handleChange","event","updateQuantity","colSpan","CartDetails","CartDetailsRows_CartDetailsRows","DataGetter","componentDidUpdate","getData","componentDidMount","dsData","products_params","rtData","_limit","_sort","_page","category_like","Checkout","formData","product_id","handleCancel","required","Thanks","ShopActions","CartActions","ShopConnector","ds","_class2","selectComponent","wrap","Content","section","Redirect","Switch","from","Route","render","AuthProviderImpl","credentials","post","success","token","Error","Provider","Admin","lazy","Promise","all","bind","App","es","store","AuthProviderImpl_AuthProviderImpl","BrowserRouter","component","react","fallback","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3b1c212.chunk.js","sourcesContent":["import { DataTypes } from \"./Types\";\n\n// const protocol = \"http\";\n// const hostname = \"localhost\";\n// const port = 3500;\n\nexport const RestUrls = {\n    [DataTypes.PRODUCTS]: `/api/products`,\n    [DataTypes.CATEGORIES]: `/api/categories`,\n    [DataTypes.ORDERS]: `/api/orders`    \n}\n\nexport const GraphQlUrl = `/graphql`;\nexport const authUrl = `/login`;\n","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nexport class ToggleLink extends Component {\n\n    render() {\n        return <Route path={ this.props.to } exact={ this.props.exact }\n                children={ routeProps => {\n            \n            const baseClasses = this.props.className || \"m-2 btn btn-block\";\n            const activeClass = this.props.activeClass || \"btn-primary\";\n            const inActiveClass = this.props.inActiveClass || \"btn-secondary\"\n\n            const combinedClasses = \n                `${baseClasses} ${routeProps.match ? activeClass : inActiveClass}`\n            \n            return <Link to={ this.props.to } className={ combinedClasses }>\n                        { this.props.children }\n                    </Link>\n         }} />\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class ValidationError extends Component {\n\n    render() {\n        if (this.props.errors) {\n            return this.props.errors.map(err => \n                <h6 className=\"text-danger\" key={err}>\n                    { err }\n                </h6>\n            )\n        }\n        return null;\n    }\n}\n","export const GetMessages = (elem) => {\n    const messages = [];\n    if (elem.validity.valueMissing) {\n        messages.push(\"Value required\");\n    }\n    if (elem.validity.typeMismatch) {\n        messages.push(`Invalid ${elem.type}`);                        \n    }    \n    return messages;\n}\n","import React, { Component } from \"react\";\nimport { ValidationError } from \"./ValidationError\";\nimport { GetMessages } from \"./ValidationMessages\";\n\nexport class ValidatedForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            validationErrors: {}\n        }\n        this.formElements = {};\n    }\n\n    handleSubmit = () => {\n        this.setState(state => {\n            const newState = { ...state, validationErrors: {} } \n            Object.values(this.formElements).forEach(elem => {\n                if (!elem.checkValidity()) {               \n                    newState.validationErrors[elem.name] = GetMessages(elem);\n                }\n            })           \n            return newState;\n        }, () => {\n            if (Object.keys(this.state.validationErrors).length === 0) {\n                const data =  Object.assign(...Object.entries(this.formElements)\n                    .map(e => ({[e[0]]: e[1].value})) )\n                this.props.submitCallback(data);\n            }\n        });\n    }\n\n    registerRef = (element) => {\n        if (element !== null) {\n            this.formElements[element.name] = element;\n        }\n    }\n\n    renderElement = (modelItem) => {\n        const name = modelItem.name || modelItem.label.toLowerCase();\n        return <div className=\"form-group\" key={ modelItem.label }>\n            <label>{ modelItem.label }</label>\n            <ValidationError errors={ this.state.validationErrors[name] } />\n            <input className=\"form-control\" name={ name } ref={ this.registerRef }\n                { ...this.props.defaultAttrs } { ...modelItem.attrs } />            \n        </div>\n    }\n\n    render() {\n        return <React.Fragment>\n            { this.props.formModel.map(m => this.renderElement(m))}\n            <div className=\"text-center\">\n                <button className=\"btn btn-secondary m-1\" \n                        onClick={ this.props.cancelCallback }>\n                    { this.props.cancelText || \"Cancel\" }\n                </button>\n                <button className=\"btn btn-primary m-1\" \n                        onClick={ this.handleSubmit }>\n                    { this.props.submitText || \"Submit\"}\n                </button>         \n            </div>\n        </React.Fragment>\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class PaginationButtons extends Component {\n\n    getPageNumbers = () => {\n        if (this.props.pageCount < 4) {\n            return [...Array(this.props.pageCount + 1).keys()].slice(1);\n        } else if (this.props.currentPage <= 4) {     \n            return [1, 2, 3, 4, 5];\n        } else  if (this.props.currentPage > this.props.pageCount - 4) {\n            return [...Array(5).keys()].reverse()\n                .map(v => this.props.pageCount - v);\n        } else {\n            return [this.props.currentPage -1, this.props.currentPage,\n                this.props.currentPage + 1];\n        }        \n    }\n\n    render() {\n        const current = this.props.currentPage;\n        const pageCount = this.props.pageCount;\n        const navigate = this.props.navigate;\n        return <React.Fragment>\n            <button onClick={ () => navigate(current  - 1) }\n                disabled={ current === 1 } className=\"btn btn-secondary mx-1\">\n                    Previous\n            </button>\n            { current > 4 && \n                <React.Fragment>\n                    <button className=\"btn btn-secondary mx-1\" \n                        onClick={ () => navigate(1)}>1</button>\n                    <span className=\"h4\">...</span>\n                </React.Fragment>\n            }\n            { this.getPageNumbers().map(num => \n                <button className={ `btn mx-1 ${num === current \n                        ? \"btn-primary\": \"btn-secondary\"}`}\n                    onClick={ () => navigate(num)} key={ num }>\n                        { num }\n                </button>)}\n            { current <= (pageCount - 4) && \n                <React.Fragment>\n                    <span className=\"h4\">...</span>\n                    <button className=\"btn btn-secondary mx-1\" \n                            onClick={ () => navigate(pageCount)}>\n                        { pageCount }\n                    </button>\n                </React.Fragment>\n            }\n            <button onClick={ () => navigate(current + 1) }\n                disabled={ current === pageCount }\n                className=\"btn btn-secondary mx-1\">\n                    Next\n            </button>\n        </React.Fragment>        \n    }\n}\n","import React, { Component } from \"react\";\nimport { PaginationButtons } from \"./PaginationButtons\";\n\nexport class PaginationControls extends Component {\n\n    constructor(props) {\n        super(props);\n        this.pageSizes = this.props.sizes || [5, 10, 25, 100];\n        this.sortKeys = this.props.keys || [\"Name\", \"Price\"];\n    }\n\n    handlePageSizeChange = (ev) => {\n        this.props.setPageSize(ev.target.value);\n    }\n\n    handleSortPropertyChange = (ev) => { \n        this.props.setSortProperty(ev.target.value);\n    }\n\n    render() {\n        return <div className=\"m-2\">\n                <div className=\"text-center m-1\">            \n                    <PaginationButtons currentPage={this.props.currentPage} \n                        pageCount={this.props.pageCount} \n                        navigate={ this.props.navigateToPage }/>\n                </div>\n                <div className=\"form-inline justify-content-center\">\n                    <select className=\"form-control\"\n                            onChange={ this.handlePageSizeChange } \n                            value={ this.props.pageSize|| this.pageSizes[0] }>\n                        { this.pageSizes.map(s => \n                            <option value={s} key={s}>{s} per page</option>\n                        )}\n                    </select>\n                    <select className=\"form-control\"\n                            onChange={ this.handleSortPropertyChange } \n                            value={ this.props.sortKey || this.sortKeys[0] }>\n                        { this.sortKeys.map(k => \n                            <option value={k.toLowerCase()} key={k}>\n                                Sort By { k }\n                            </option>\n                        )}\n                    </select>\n            </div>\n        </div>\n    }\n}\n","import React from \"react\";\n\nexport const AuthContext = React.createContext({\n    isAuthenticated: false, \n    webToken: null,\n    authenticate: (username, password) => {},\n    signout: () => {}\n})\n","export const DataTypes = {\n    PRODUCTS: \"products\",\n    CATEGORIES: \"categories\",\n    ORDERS: \"orders\"\n}\n\nexport const ActionTypes = {\n    DATA_LOAD: \"data_load\",\n    DATA_STORE: \"data_store\",\n    DATA_SET_SORT_PROPERTY: \"data_set_sort\",\n    DATA_SET_PAGESIZE: \"data_set_pagesize\",\n    CART_ADD: \"cart_add\",\n    CART_UPDATE: \"cart_update\",\n    CART_REMOVE: \"cart_delete\",\n    CART_CLEAR: \"cart_clear\"\n}\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setPageSize, setSortProperty } from \"../data/ActionCreators\";\n\nconst mapStateToProps = dataStore => dataStore;\nconst mapDispatchToProps = { setPageSize, setSortProperty };\n\nconst mergeProps = (dataStore, actionCreators, router) => ({\n    ...dataStore, ...router, ...actionCreators,\n    currentPage: Number(router.match.params.page),\n    pageCount: Math.ceil((dataStore.products_total \n        | dataStore.pageSize || 5)/(dataStore.pageSize || 5)),\n    navigateToPage: (page) => router.history\n        .push(`/shop/products/${router.match.params.category}/${page}`),    \n})\n\nexport const ProductPageConnector = (PageComponent) => \n    withRouter(connect(mapStateToProps, mapDispatchToProps, \n        mergeProps)(PageComponent))\n","import { createStore, applyMiddleware } from \"redux\";\nimport { ShopReducer } from \"./ShopReducer\";\nimport { CartReducer } from \"./CartReducer\";\nimport { CommonReducer } from \"./CommonReducer\";\nimport { asyncActions } from \"./AsyncMiddleware\";\n\nexport const SportsStoreDataStore \n    = createStore(CommonReducer(ShopReducer, CartReducer), \n        applyMiddleware(asyncActions));\n","export const CommonReducer = (...reducers) => (storeData, action) => {\n    for (let i = 0; i < reducers.length; i++ ) {\n        let newStore = reducers[i](storeData, action);\n        if (newStore !== storeData) {\n            return newStore;\n        }\n    }    \n    return storeData;\n}\n","import { ActionTypes, DataTypes } from \"./Types\";\n\nexport const ShopReducer = (storeData, action) => {\n    switch(action.type) {\n        case ActionTypes.DATA_LOAD:\n            return { \n                ...storeData, \n                [action.payload.dataType]: action.payload.data,\n                [`${action.payload.dataType}_total`]: action.payload.total,\n                [`${action.payload.dataType}_params`]: action.payload.params\n            };\n        case ActionTypes.DATA_SET_PAGESIZE:\n            return { ...storeData, pageSize: action.payload }\n        case ActionTypes.DATA_SET_SORT_PROPERTY:\n            return { ...storeData, sortKey: action.payload }        \n        case ActionTypes.DATA_STORE:\n            if (action.payload.dataType === DataTypes.ORDERS) {\n                return { ...storeData, order: action.payload.data }\n            }\n            break;\n        default:\n            return storeData || {};\n    }\n}\n","import { ActionTypes } from \"./Types\";\n\nexport const CartReducer = (storeData, action) => {\n    let newStore = { cart: [], cartItems: 0, cartPrice: 0, ...storeData }\n    switch(action.type) {\n        case ActionTypes.CART_ADD: \n            const p = action.payload.product;\n            const q = action.payload.quantity;\n\n            let existing = newStore.cart.find(item => item.product.id === p.id);\n            if (existing) {\n                existing.quantity += q;\n            } else {\n                newStore.cart = [...newStore.cart, action.payload];\n            }\n            newStore.cartItems += q;\n            newStore.cartPrice += p.price * q;            \n            return newStore;\n\n        case ActionTypes.CART_UPDATE:\n            newStore.cart = newStore.cart.map(item => {\n                if (item.product.id === action.payload.product.id) {\n                    const diff = action.payload.quantity - item.quantity;\n                    newStore.cartItems += diff;\n                    newStore.cartPrice+= (item.product.price * diff);\n                    return action.payload;\n                } else {\n                    return item;\n                }\n            });\n            return newStore;\n\n        case ActionTypes.CART_REMOVE:\n            let selection = newStore.cart.find(item => \n                item.product.id === action.payload.id);\n            newStore.cartItems -= selection.quantity;\n            newStore.cartPrice -= selection.quantity * selection.product.price;\n            newStore.cart = newStore.cart.filter(item => item !== selection );\n            return newStore;\n\n        case ActionTypes.CART_CLEAR:\n            return { ...storeData, cart: [], cartItems: 0, cartPrice: 0}\n            \n        default:\n            return storeData || {};\n    }\n}\n","const isPromise = (payload) => \n    (typeof(payload) === \"object\" || typeof(payload) === \"function\")\n        && typeof(payload.then) === \"function\";\n\nexport const asyncActions = () => (next) => (action) => {\n    if (isPromise(action.payload)) {\n        action.payload.then(result => next({...action, payload: result}));\n    } else {\n        next(action)\n    }\n}\n","import { ActionTypes, DataTypes } from \"./Types\";\nimport { RestDataSource } from \"./RestDataSource\";\n\nconst dataSource = new RestDataSource();\n\nexport const loadData = (dataType, params) => (\n    {\n        type: ActionTypes.DATA_LOAD,\n        payload: dataSource.GetData(dataType, params).then(response => \n             ({ dataType, \n                data: response.data, \n                total: Number(response.headers[\"x-total-count\"]),\n                params\n             })\n        )\n    })\n\nexport const setPageSize = (newSize) => {\n    return ({ type: ActionTypes.DATA_SET_PAGESIZE, payload: newSize});\n}\n\nexport const setSortProperty = (newProp) => \n    ({ type: ActionTypes.DATA_SET_SORT_PROPERTY, payload: newProp});\n\nexport const placeOrder = (order) => ({\n        type: ActionTypes.DATA_STORE, \n        payload: dataSource.StoreData(DataTypes.ORDERS, order).then(response => ({\n            dataType: DataTypes.ORDERS, data: response.data\n        }))\n    })\n","import Axios from \"axios\";\nimport { RestUrls } from \"./Urls\";\n\nexport class RestDataSource {\n\n    constructor(err_handler) {\n        this.error_handler = err_handler || (() => {});\n    }\n\n    GetData = (dataType, params) =>\n        this.SendRequest(\"get\", RestUrls[dataType], params);\n\n    StoreData = (dataType, data) => \n        this.SendRequest(\"post\", RestUrls[dataType], {}, data);\n\n    SendRequest = (method, url, params, data) =>\n        Axios.request({ method, url, params, data });\n}\n","import React, { Component } from \"react\";\nimport { ToggleLink } from \"../ToggleLink\";\nimport { Link } from \"react-router-dom\";\n\nexport class CategoryNavigation extends Component {\n\n    render() {\n        return <React.Fragment>\n            <ToggleLink to={ `${this.props.baseUrl}/all` } exact={ false }>\n                All\n            </ToggleLink>                    \n            { this.props.categories && this.props.categories.map(cat => \n                <ToggleLink key={ cat }\n                    to={ `${this.props.baseUrl}/${cat.toLowerCase()}`}>\n                    { cat }\n                </ToggleLink>\n            )}   \n            <Link className=\"btn btn-block btn-secondary fixed-bottom m-2 col-3\"\n                to=\"/admin\">\n                Administration\n            </Link>\n        </React.Fragment>\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class ProductList extends Component {\n\n    render() {\n        if (this.props.products == null || this.props.products.length === 0) {\n            return <h5 className=\"p-2\">No Products</h5>\n        }\n        return this.props.products.map(p => \n                <div className=\"card m-1 p-1 bg-light\" key={ p.id }>\n                    <h4>\n                        { p.name }\n                        <span className=\"badge badge-pill badge-primary float-right\">\n                            ${ p.price.toFixed(2) }\n                        </span>\n                    </h4>\n                    <div className=\"card-text bg-white p-1\">\n                        { p.description }\n                        <button className=\"btn btn-success btn-sm float-right\"\n                            onClick={ () => this.props.addToCart(p) } >\n                                Add To Cart\n                        </button>                                            \n                    </div>                \n                </div>\n            )\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class CartSummary extends Component {\n\n    getSummary = () => {\n        if (this.props.cartItems > 0) {\n            return <span>\n                { this.props.cartItems } item(s), \n                ${ this.props.cartPrice.toFixed(2)}\n            </span>\n        } else {\n            return <span>Your cart: (empty) </span>\n        }        \n    }\n\n    getLinkClasses = () => {\n        return `btn btn-sm bg-dark text-white \n            ${ this.props.cartItems === 0 ? \"disabled\": \"\"}`;\n    }\n\n    render() {\n        return <div className=\"float-right\">\n            <small>\n                 { this.getSummary() }            \n                <Link className={ this.getLinkClasses() } \n                        to=\"/shop/cart\">\n                    <i className=\"fa fa-shopping-cart\"></i>\n                </Link>                \n            </small>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { CategoryNavigation } from \"./CategoryNavigation\";\nimport { ProductList } from \"./ProductList\";\nimport { CartSummary } from \"./CartSummary\";\nimport { ProductPageConnector } from \"./ProductPageConnector\";\nimport { PaginationControls } from \"../PaginationControls\";\n\nconst ProductPages = ProductPageConnector(PaginationControls);\n\nexport class Shop extends Component {\n\n    handleAddToCart = (...args) => {\n        this.props.addToCart(...args);\n        this.props.history.push(\"/shop/cart\");\n    }\n\n    render() {\n        return <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col bg-dark text-white\">\n                    <div className=\"navbar-brand\">SPORTS STORE</div>\n                    <CartSummary { ...this.props } />\n                </div>\n            </div>        \n            <div className=\"row\">\n                <div className=\"col-3 p-2\">\n                    <CategoryNavigation baseUrl=\"/shop/products\" \n                        categories={ this.props.categories } />\n                </div>\n                <div className=\"col-9 p-2\">\n                    <ProductPages />\n                    <ProductList products={ this.props.products } \n                        addToCart={ this.handleAddToCart } />\n                </div>\n            </div>\n        </div>\n    }\n}\n","import { ActionTypes} from \"./Types\";\n\nexport const addToCart = (product, quantity) => ({\n    type: ActionTypes.CART_ADD,\n    payload: {\n        product, \n        quantity: quantity || 1\n    }\n});\n\nexport const updateCartQuantity = (product, quantity) => ({\n    type: ActionTypes.CART_UPDATE,\n    payload: { product, quantity }\n})\n\nexport const removeFromCart = (product) => ({\n    type: ActionTypes.CART_REMOVE,\n    payload: product\n})\n\nexport const clearCart = () => ({\n    type: ActionTypes.CART_CLEAR\n})\n","import React, { Component } from \"react\";\n\nexport class CartDetailsRows extends Component {\n\n    handleChange = (product, event) => {\n        this.props.updateQuantity(product, event.target.value);\n    }\n\n    render() {\n        if (!this.props.cart || this.props.cart.length === 0) {\n            return <tr>\n                <td colSpan=\"5\">Your cart is empty</td>\n            </tr>\n        } else {\n            return <React.Fragment>\n                { this.props.cart.map(item =>\n                    <tr key={ item.product.id }>\n                        <td>\n                            <input type=\"number\" value={ item.quantity }\n                                onChange={ (ev) => \n                                    this.handleChange(item.product, ev) } />\n                        </td>\n                        <td>{ item.product.name }</td>\n                        <td>${ item.product.price.toFixed(2) }</td>\n                        <td>${ (item.quantity * item.product.price).toFixed(2) }</td>\n                        <td>\n                            <button className=\"btn btn-sm btn-danger\" \n                                onClick={ () => \n                                        this.props.removeFromCart(item.product)}>\n                                    Remove\n                                </button>\n                        </td>\n                    </tr>\n                )}\n                <tr>\n                    <th colSpan=\"3\" className=\"text-right\">Total:</th>\n                    <th colSpan=\"2\">${ this.props.cartPrice.toFixed(2) }</th>\n                </tr>\n            </React.Fragment> \n        }        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CartDetailsRows } from \"./CartDetailsRows\";\n\nexport class CartDetails extends Component {\n\n    getLinkClasses = () => `btn btn-secondary m-1 \n        ${this.props.cartItems === 0 ? \"disabled\": \"\"}`;\n        \n    render() {\n        return <div className=\"m-3\">\n            <h2 className=\"text-center\">Your Cart</h2>\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th>Quantity</th>\n                        <th>Product</th>\n                        <th className=\"text-right\">Price</th>\n                        <th className=\"text-right\">Subtotal</th>\n                        <th/>\n                    </tr>\n                </thead>\n                <tbody>\n                    <CartDetailsRows cart={ this.props.cart} \n                        cartPrice={ this.props.cartPrice }\n                        updateQuantity={ this.props.updateCartQuantity } \n                        removeFromCart={ this.props.removeFromCart } />\n                </tbody>\n            </table>\n            <div className=\"text-center\">\n                <Link className=\"btn btn-primary m-1\" to=\"/shop\">\n                    Continue Shopping\n                </Link>\n                <Link className={ this.getLinkClasses() } to=\"/shop/checkout\">\n                    Checkout                \n                </Link>\n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { DataTypes } from \"../data/Types\";\n\nexport class DataGetter extends Component {\n\n    render() {\n        return <React.Fragment>{ this.props.children }</React.Fragment>\n    }\n\n    componentDidUpdate = () => this.getData();\n    componentDidMount = () => this.getData();\n\n    getData = () => {\n        const dsData = this.props.products_params || {} ;\n        const rtData = {\n            _limit: this.props.pageSize || 5,\n            _sort: this.props.sortKey || \"name\",\n            _page: this.props.match.params.page || 1,\n            category_like: (this.props.match.params.category || \"\") === \"all\" \n                ? \"\" : this.props.match.params.category\n        }        \n        \n        if (Object.keys(rtData).find(key => dsData[key] !== rtData[key])) {\n            this.props.loadData(DataTypes.PRODUCTS, rtData);      \n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\n\nexport class Checkout extends Component {\n\n    constructor(props) {\n        super(props);\n        this.defaultAttrs = { type: \"text\", required: true };\n        this.formModel = [\n                { label: \"Name\"},\n                { label: \"Email\", attrs: { type: \"email\" }}, \n                { label: \"Address\" }, \n                { label: \"City\"}, \n                { label: \"Zip/Postal Code\", name: \"zip\"}, \n                { label: \"Country\"}]\n    }\n\n    handleSubmit = (formData) => {\n        const order = { ...formData, products: this.props.cart.map(item => \n            ({  quantity: item.quantity, product_id: item.product.id})) }\n        this.props.placeOrder(order);\n        this.props.clearCart();\n        this.props.history.push(\"/shop/thanks\");\n    }\n\n    handleCancel = () => {\n        this.props.history.push(\"/shop/cart\");\n    }\n\n    render() {\n        return <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col bg-dark text-white\">\n                    <div className=\"navbar-brand\">SPORTS STORE</div>\n                </div>\n            </div>        \n            <div className=\"row\">\n                <div className=\"col m-2\">\n                    <ValidatedForm formModel={ this.formModel } \n                        defaultAttrs={ this.defaultAttrs } \n                        submitCallback={ this.handleSubmit } \n                        cancelCallback={ this.handleCancel } \n                        submitText=\"Place Order\" \n                        cancelText=\"Return to Cart\" />\n                </div>    \n            </div>        \n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Thanks extends Component {\n\n    render() {\n        return <div>\n            <div className=\"col bg-dark text-white\">\n                <div className=\"navbar-brand\">SPORTS STORE</div>\n            </div>\n            <div className=\"m-2 text-center\">\n                <h2>Thanks!</h2>\n                <p>Thanks for placing your order.</p>\n                <p>Your order is #{ this.props.order ? this.props.order.id : 0 }</p>\n                <p>We'll ship your goods as soon as possible.</p>\n                <Link to=\"/shop\" className=\"btn btn-primary\">\n                    Return to Store\n                </Link>\n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } \n    from \"react-router-dom\"\nimport { connect } from \"react-redux\";\nimport * as ShopActions from \"../data/ActionCreators\";\nimport { DataTypes } from \"../data/Types\";\nimport { Shop } from \"../shop/Shop\";\nimport  * as CartActions from \"../data/CartActionCreators\";\nimport { CartDetails } from \"../shop/CartDetails\";\nimport { DataGetter } from \"../data/DataGetter\";\nimport { Checkout } from \"../shop/Checkout\";\nimport { Thanks } from \"../shop/Thanks\";\n\nconst mapDispatchToProps = { ...ShopActions, ...CartActions};\n\nexport const ShopConnector = connect(ds => ds, mapDispatchToProps)(\n    class extends Component {\n\n        selectComponent = (routeProps) => {            \n            const wrap = (Component, Content) => \n                <Component { ...this.props}  { ...routeProps}>\n                    { Content && wrap(Content)}\n                </Component>            \n            switch (routeProps.match.params.section) {\n                case \"products\": \n                    return wrap(DataGetter, Shop);\n                case \"cart\":\n                    return wrap(CartDetails);\n                case \"checkout\": \n                    return wrap(Checkout);\n                case \"thanks\":\n                    return wrap(Thanks);\n                default:\n                    return <Redirect to=\"/shop/products/all/1\" />\n            }\n        }\n\n        render() {\n            return <Switch>\n                <Redirect from=\"/shop/products/:category\" \n                    to=\"/shop/products/:category/1\" exact={ true } />                \n                <Route path={ \"/shop/:section?/:category?/:page?\"}\n                    render = { routeProps => this.selectComponent(routeProps) } />  \n            </Switch>          \n        }\n\n        componentDidMount = () => this.props.loadData(DataTypes.CATEGORIES);\n    }\n)\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { AuthContext } from \"./AuthContext\";\nimport { authUrl } from \"../data/Urls\";\n\nexport class AuthProviderImpl extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAuthenticated: false,\n            webToken: null       \n        }\n    }\n\n    authenticate = (credentials) => {\n        return Axios.post(authUrl,  credentials).then(response => {\n            if (response.data.success === true) {\n                this.setState({\n                    isAuthenticated: true, \n                    webToken:response.data.token\n                })\n                return true;\n            } else {\n                throw new Error(\"Invalid Credentials\");\n            }\n        })\n    }\n\n    signout = () => {\n        this.setState({ isAuthenticated: false, webToken: null });\n    }\n\n    render = () => \n        <AuthContext.Provider value={ {...this.state, \n                authenticate: this.authenticate, signout: this.signout}}>\n            { this.props.children }        \n        </AuthContext.Provider>\n}\n","import React, { Component, lazy, Suspense } from \"react\";\nimport { SportsStoreDataStore } from \"./data/DataStore\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } \n    from \"react-router-dom\";\nimport { ShopConnector } from \"./shop/ShopConnector\";\n//import { Admin } from \"./admin/Admin\";\nimport { AuthProviderImpl } from \"./auth/AuthProviderImpl\";\n\nconst Admin = lazy(() => import(\"./admin/Admin\"));\n\nexport default class App extends Component {\n\n    render() {\n        return <Provider store={ SportsStoreDataStore }>\n            <AuthProviderImpl>\n                <Router>\n                    <Switch>\n                        <Route path=\"/shop\" component={ ShopConnector } />\n                        <Route path=\"/admin\" render={ \n                            routeProps =>\n                                <Suspense fallback={ <h3>Loading...</h3> }>\n                                    <Admin { ...routeProps } />\n                                </Suspense>\n                            } />\n                        <Redirect to=\"/shop\" />\n                    </Switch>\n                </Router>\n            </AuthProviderImpl>            \n        </Provider>\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";     \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}